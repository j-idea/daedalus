[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Imperial College Science, Technology Medicine Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/daedalus.html","id":"prepare-contact-matrix-and-initial-conditions","dir":"Articles","previous_headings":"","what":"Prepare contact matrix and initial conditions","title":"Getting started with DAEDALUS","text":"Load contact matrix U.K. socialmixr package.","code":"polymod <- socialmixr::polymod # suppress messages that clog up test output contact_data <- socialmixr::contact_matrix(   polymod,   countries = \"United Kingdom\",   age.limits = c(0L, 5L, 20L, 65L),   symmetric = TRUE ) #> Removing participants that have contacts without age information. To change this behaviour, set the 'missing.contact.age' option  # get demography vector demography <- contact_data[[\"demography\"]][[\"population\"]]  # prepare contact matrix contact_matrix <- t(contact_data[[\"matrix\"]]) / demography  # initial state: one in every 1 million is infected initial_i <- 1e-6 initial_state <- c(   S = 1.0 - initial_i, E = 0.0,   Is = initial_i, Ia = 0.0,   H = 0.0, R = 0.0, D = 0.0 )  # build for all age groups initial_state <- rbind(   initial_state,   initial_state,   initial_state,   initial_state )  # multiply by demography vector for absolute values initial_state <- initial_state * demography"},{"path":"/articles/daedalus.html","id":"run-model","dir":"Articles","previous_headings":"","what":"Run model","title":"Getting started with DAEDALUS","text":"model runs 100 timesteps (assumed days) default. Get data long ‘tidy’ format using prepare_output(). Plot data view epidemic curve.","code":"output <- daedalus(   initial_state,   parameters = default_parameters(contact_matrix = contact_matrix) ) data <- prepare_output(output)  head(data) #>   time age_group compartment   value #> 1    1       0-4 susceptible 3453667 #> 2    2       0-4 susceptible 3453661 #> 3    3       0-4 susceptible 3453654 #> 4    4       0-4 susceptible 3453643 #> 5    5       0-4 susceptible 3453627 #> 6    6       0-4 susceptible 3453599 ggplot(data) +   geom_line(     aes(time, value, colour = compartment)   ) +   facet_wrap(     facets = vars(age_group)   )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pratik Gupte. Author, maintainer. Imperial College Science, Technology Medicine. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gupte P (2024). daedalus: Optimise economic, social health trade-offs pandemic. R package version 0.0.2, https://github.com/j-idea/daedalus.","code":"@Manual{,   title = {daedalus: Optimise economic, social and health trade-offs in a pandemic},   author = {Pratik Gupte},   year = {2024},   note = {R package version 0.0.2},   url = {https://github.com/j-idea/daedalus}, }"},{"path":"/index.html","id":"daedalus-optimise-economic-social-and-health-trade-offs-in-a-pandemic","dir":"","previous_headings":"","what":"Optimise economic, social and health trade-offs in a pandemic","title":"Optimise economic, social and health trade-offs in a pandemic","text":"daedalus implements integrated epidemiological economic model Haw et al. (2022).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Optimise economic, social and health trade-offs in a pandemic","text":"can install development version daedalus GitHub using remotes package.","code":"# install.packages(\"remotes\") remotes::install_github(\"j-idea/daedalus\", upgrade = FALSE)"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Optimise economic, social and health trade-offs in a pandemic","text":"","code":"library(daedalus)"},{"path":"/index.html","id":"prepare-contact-matrix-and-initial-conditions","dir":"","previous_headings":"Quick start","what":"Prepare contact matrix and initial conditions","title":"Optimise economic, social and health trade-offs in a pandemic","text":"","code":"polymod <- socialmixr::polymod # suppress messages that clog up test output suppressMessages(   contact_data <- socialmixr::contact_matrix(     polymod,     countries = \"United Kingdom\",     age.limits = c(0, 5, 20, 65),     symmetric = TRUE   ) )  # get demography vector demography <- contact_data[[\"demography\"]][[\"population\"]]  # prepare contact matrix contact_matrix <- t(contact_data[[\"matrix\"]]) / demography  # initial state: one in every 1 million is infected initial_i <- 1e-6 initial_state <- c(   S = 1.0 - initial_i, E = 0.0,   Is = initial_i, Ia = 0.0,   H = 0.0, R = 0.0, D = 0.0 )  # build for all age groups initial_state <- rbind(   initial_state,   initial_state,   initial_state,   initial_state,   deparse.level = 0L )  # multiply by demography vector for absolute values initial_state <- initial_state * demography"},{"path":"/index.html","id":"run-model","dir":"","previous_headings":"Quick start","what":"Run model","title":"Optimise economic, social and health trade-offs in a pandemic","text":"model runs 100 timesteps (assumed days) default. Get data long ‘tidy’ format using prepare_output().","code":"output <- daedalus(   initial_state,   parameters = default_parameters(contact_matrix = contact_matrix) ) data <- prepare_output(output)  head(data) #>   time age_group compartment   value #> 1    1       0-4 susceptible 3453667 #> 2    2       0-4 susceptible 3453661 #> 3    3       0-4 susceptible 3453654 #> 4    4       0-4 susceptible 3453643 #> 5    5       0-4 susceptible 3453627 #> 6    6       0-4 susceptible 3453599"},{"path":"/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Optimise economic, social and health trade-offs in a pandemic","text":"WIP.","code":""},{"path":[]},{"path":"/reference/daedalus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"daedalus: Optimise economic, social and health trade-offs in a pandemic — daedalus-package","title":"daedalus: Optimise economic, social and health trade-offs in a pandemic — daedalus-package","text":"Model optimise trade-offs social economic activity containing pandemic, presented Haw et al. (2022) <doi.org/10.1038/s43588-022-00233-0>.","code":""},{"path":[]},{"path":"/reference/daedalus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"daedalus: Optimise economic, social and health trade-offs in a pandemic — daedalus-package","text":"Maintainer: Pratik Gupte p.gupte24@imperial.ac.uk (ORCID) contributors: Imperial College Science, Technology Medicine [copyright holder]","code":""},{"path":"/reference/daedalus.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"Run DAEDALUS model R. work progress.","code":""},{"path":"/reference/daedalus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"","code":"daedalus(initial_state, time_end = 300L, parameters = default_parameters())"},{"path":"/reference/daedalus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"initial_state initial state population numeric matrix rows represent age groups columns represent epidemiological compartments. time_end integer-like value number timesteps return data. treated number days data returned day. Defaults 300 days. parameters list model parameters. See default_parameters() model defaults.","code":""},{"path":"/reference/daedalus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS model for health, social and economic costs of a pandemic — daedalus","text":"<deSolve> object.","code":""},{"path":"/reference/daedalus_rhs.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS system of ODEs — daedalus_rhs","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"compartmental epidemiological model four age groups. function intended passed solvers deSolve package. work progress additional components added future.","code":""},{"path":"/reference/daedalus_rhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"","code":"daedalus_rhs(t, state, parameters)"},{"path":"/reference/daedalus_rhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"t single double value time. state Vector initial state. form vector \\(X_i, X \\S, E, I_s, I_a, R, H, D\\), values compartments age group \\(\\) given consecutively. May matrix allow multiple age groups. See daedalus() explanation epidemiological compartments. parameters List parameters used simulation. See default_parameters() list parameters used user-facing model function daedalus().","code":""},{"path":"/reference/daedalus_rhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"list single numeric vector size state, suitable output deSolve functions deSolve::lsoda().","code":""},{"path":"/reference/daedalus_rhs.html","id":"details-daedalus-model","dir":"Reference","previous_headings":"","what":"Details: DAEDALUS model","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"section work progress, describes DAEDALUS model brief. model age-stratified, supports heterogeneity social contacts age groups, currently supports four age groups.","code":""},{"path":"/reference/daedalus_rhs.html","id":"epidemiological-model","dir":"Reference","previous_headings":"","what":"Epidemiological model","title":"DAEDALUS system of ODEs — daedalus_rhs","text":"model following epidemiological compartments: susceptible (\\(S\\)), exposed (\\(E\\)), infectious symptomatic (\\(I_s\\)), infectious asymptomatic (\\(I_a\\)), hospitalised (\\(H\\)), recovered (\\(R\\)), dead (\\(D\\)). model currently allows uniform parameters transitions compartments. Group specific parameters expected supported future.","code":""},{"path":"/reference/default_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Default parameters for DAEDALUS — default_parameters","title":"Default parameters for DAEDALUS — default_parameters","text":"Default parameters DAEDALUS","code":""},{"path":"/reference/default_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default parameters for DAEDALUS — default_parameters","text":"","code":"default_parameters(...)"},{"path":"/reference/default_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default parameters for DAEDALUS — default_parameters","text":"... User-specified values replace default parameter values.","code":""},{"path":"/reference/default_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default parameters for DAEDALUS — default_parameters","text":"","code":"default_parameters(beta = 1.5 / 7.0) #> $beta #> [1] 0.2142857 #>  #> $sigma #> [1] 0.3333333 #>  #> $p_sigma #> [1] 0.66 #>  #> $epsilon #> [1] 0.2 #>  #> $gamma #> [1] 0.1428571 #>  #> $eta #> [1] 0.01 #>  #> $omega #> [1] 0.01 #>  #> $rho #> [1] 0.005555556 #>  #> $contact_matrix #>      [,1] [,2] [,3] [,4] #> [1,]    1    1    1    1 #> [2,]    1    1    1    1 #> [3,]    1    1    1    1 #> [4,]    1    1    1    1 #>"},{"path":"/reference/epi_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Epidemiological compartments and indices — epi_constants","title":"Epidemiological compartments and indices — epi_constants","text":"Names indices epidemiological compartments used DAEDALUS, reuse model code.","code":""},{"path":"/reference/epi_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epidemiological compartments and indices — epi_constants","text":"","code":"COMPARTMENTS  i_S  i_E  i_Is  i_Ia  i_H  i_R  i_D  N_EPI_COMPARTMENTS"},{"path":"/reference/epi_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Epidemiological compartments and indices — epi_constants","text":"object class character length 7. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1. object class integer length 1.","code":""},{"path":"/reference/epi_constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epidemiological compartments and indices — epi_constants","text":"COMPARTMENTS returns character vector epidemiological compartment names. constants return integer values.","code":""},{"path":"/reference/epi_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Epidemiological compartments and indices — epi_constants","text":"DAEDALUS 7 epidemiological compartments: susceptible, exposed, infectious symptomatic (\"infect_symp\"), infectious asymptomatic (\"infect_asymp\") , hospitalised, recovered, dead.","code":""},{"path":"/reference/model_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"DAEDALUS model constants — model_constants","title":"DAEDALUS model constants — model_constants","text":"Frequently used values DAEDALUS model related model population structure. See also epi_constants constants specific epidemiological model.","code":""},{"path":"/reference/model_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAEDALUS model constants — model_constants","text":"","code":"N_AGE_GROUPS  N_VACCINE_STRATA  AGE_GROUPS"},{"path":"/reference/model_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DAEDALUS model constants — model_constants","text":"object class integer length 1. object class integer length 1. object class character length 4.","code":""},{"path":"/reference/model_constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DAEDALUS model constants — model_constants","text":"Values model constants.","code":""},{"path":"/reference/model_constants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DAEDALUS model constants — model_constants","text":"DAEDALUS model requires following values fixed. Number age groups: 4 Number vaccination strata: 1 Age group bins: 0-4 years, 5-19 years, 20-65 years (working age), 65+ years","code":""},{"path":"/reference/prepare_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare DAEDALUS data — prepare_output","title":"Prepare DAEDALUS data — prepare_output","text":"Convert DAEDALUS data long-format <data.frame>.","code":""},{"path":"/reference/prepare_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare DAEDALUS data — prepare_output","text":"","code":"prepare_output(output)"},{"path":"/reference/prepare_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare DAEDALUS data — prepare_output","text":"output Output daedalus() class <deSolve>.","code":""},{"path":"/reference/prepare_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare DAEDALUS data — prepare_output","text":"<data.frame> long 'tidy' format columns \"time\", \"age_group\", \"compartment\", \"value\", age-group specific value number individuals epidemiological compartment timestep.","code":""},{"path":"/news/index.html","id":"daedalus-002","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.2","title":"daedalus 0.0.2","text":"patch version adds basic epidemiological model (#7). Added model functions daedalus() (user-facing) .daedalus_ode() (internal) run simple age-stratified (4 age groups) SEIR-HD epidemiological model taken @robj411 https://github.com/robj411/p2_drivers, Added default model parameters default_parameters() correspond roughly pandemic influenza, Added prepare_output() prepare daedalus() output, Added tests functions, Updated package infrastructure: DESCRIPTION, NAMESPACE, WORDLIST, .Rbuildignore, _pkgdown.yml reference. Disabled undesirable_function_linter vignettes flags library() calls. Updated Readme added content ‘Get started’ vignette.","code":""},{"path":"/news/index.html","id":"daedalus-001","dir":"Changelog","previous_headings":"","what":"daedalus 0.0.1","title":"daedalus 0.0.1","text":"Initial package setup including GitHub Actions workflows code quality checks. Updated GH Actions workflows R CMD check (fails ‘NOTE’) code test coverage; Added linting, citation update, Readme rendering, license year update workflows; Added spellchecking known words list.","code":""}]
